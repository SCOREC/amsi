include(util)

find_package(PkgConfig QUIET)

checkSetParam(PETSC_DIR TRUE)
checkSetParam(PETSC_ARCH TRUE)

list(APPEND CMAKE_PREFIX_PATH "${PETSC_DIR}/${PETSC_ARCH}")

if(PETSC_FIND_REQUIRED)
  set(_PETSC_OPTS "REQUIRED")
endif()
if(PETSC_FIND_QUIETLY)
  set(_PETSC_OPTS "QUIET")
endif()
if(PETSC_FIND_REQUIRED AND PETSC_FIND_QUIETLY)
  set(_PETSC_OPTS "REQUIRED QUIET")
endif()

pkg_check_modules(PETSC ${_PETSC_OPTS} IMPORTED_TARGET PETSc)

if(PETSC_FOUND)
  set(PETSC_INCLUDE_DIRS ${PETSC_INCLUDEDIR})
  set(PETSC_LIBRARIES "${PETSC_STATIC_LDFLAGS};${PETSC_STATIC_LIBRARIES}")
endif(PETSC_FOUND)

  #find_path(PETSC_INCLUDE_DIR_ONE petscksp.h
  #  HINTS ${PETSC_DIR}
  #  PATH_SUFFIXES include)

  #find_path(PETSC_INCLUDE_DIR_TWO petscfix.h
  #  HINTS ${PETSC_DIR}/${PETSC_ARCH}
  #  PATH_SUFFIXES include)

  #set(PETSC_INCLUDE_DIRS ${PETSC_PACKAGE_INCLUDES} ${PETSC_INCLUDE_DIR_ONE} ${PETSC_INCLUDE_DIR_TWO})
  #describeVar(PETSC_INCLUDE_DIRS)

  #find_library(PETSC_LIB petsc
  # HINTS ${PETSC_DIR}/${PETSC_ARCH}
  # PATH_SUFFIXES lib)

  #set(PETSC_LIBRARIES ${PETSC_LIB} ${PETSC_PACKAGE_LIBS})
  #describeVar(PETSC_LIBRARIES)

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(PETSC DEFAULT_MSG PETSC_LIBRARIES PETSC_INCLUDE_DIRS)
mark_as_advanced(PETSC_LIBRARIES PETSC_INCLUDE_DIRS)
